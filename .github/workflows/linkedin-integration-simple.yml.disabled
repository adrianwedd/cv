name: üîó LinkedIn Integration (Simplified)

# Simplified LinkedIn integration workflow for reliable production activation
# Focuses on core functionality with minimal dependencies

on:
  workflow_dispatch:
    inputs:
      test_mode:
        description: 'üß™ Test Mode Only'
        required: false
        default: true
        type: boolean

env:
  LINKEDIN_SYSTEM_VERSION: "v1.0-simple"
  TIMEZONE: "Australia/Tasmania"

jobs:
  linkedin-test:
    name: üîó LinkedIn Connection Test
    runs-on: ubuntu-latest
    outputs:
      status: ${{ steps.test.outputs.status }}
      consent: ${{ steps.consent.outputs.verified }}
    steps:
      - name: üöÄ LinkedIn Test Initialization
        run: |
          echo "üîó **LINKEDIN INTEGRATION TEST**"
          echo "üìÖ $(TZ='${{ env.TIMEZONE }}' date +'%Y-%m-%d %H:%M %Z')"
          echo "üß™ Test Mode: ${{ github.event.inputs.test_mode || 'true' }}"
          echo "üìä Version: ${{ env.LINKEDIN_SYSTEM_VERSION }}"

      - name: üì• Repository Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 1
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: üîß Node.js Setup
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
          cache-dependency-path: '.github/scripts/package-lock.json'

      - name: üì¶ Dependencies Installation
        run: |
          echo "üì¶ **Installing Dependencies**"
          cd .github/scripts
          npm ci --production
          echo "‚úÖ Dependencies installed"

      - name: ‚úÖ User Consent Verification
        id: consent
        run: |
          echo "‚úÖ **VERIFYING USER CONSENT**"
          
          if [ -n "${{ secrets.LINKEDIN_USER_CONSENT }}" ] && [ "${{ secrets.LINKEDIN_USER_CONSENT }}" = "true" ]; then
            CONSENT_VERIFIED="true"
            echo "‚úÖ User consent verified"
          else
            CONSENT_VERIFIED="false"
            echo "‚ö†Ô∏è User consent not provided"
          fi
          
          echo "verified=$CONSENT_VERIFIED" >> $GITHUB_OUTPUT

      - name: üîó LinkedIn Connection Test
        id: test
        run: |
          echo "üîó **TESTING LINKEDIN CONNECTION**"
          cd .github/scripts
          
          # Simple connection test
          if [ -n "${{ secrets.LINKEDIN_SESSION_COOKIES }}" ]; then
            echo "‚úÖ LinkedIn credentials configured"
            # Test basic script execution
            if timeout 60 node linkedin-playwright-extractor.js test; then
              TEST_STATUS="success"
              echo "‚úÖ LinkedIn integration test passed"
            else
              TEST_STATUS="limited"
              echo "‚ö†Ô∏è LinkedIn test had issues but completed"
            fi
          else
            TEST_STATUS="no-auth"
            echo "‚ö†Ô∏è No LinkedIn authentication configured"
          fi
          
          echo "status=$TEST_STATUS" >> $GITHUB_OUTPUT
          echo "::notice title=LinkedIn Test::Status: $TEST_STATUS"
        env:
          LINKEDIN_SESSION_COOKIES: ${{ secrets.LINKEDIN_SESSION_COOKIES }}
          LINKEDIN_USER_CONSENT: ${{ secrets.LINKEDIN_USER_CONSENT }}

      - name: üìä Test Summary
        run: |
          echo "üìä **LINKEDIN INTEGRATION TEST SUMMARY**"
          echo "=================================="
          echo "‚Ä¢ Consent Status: ${{ steps.consent.outputs.verified }}"
          echo "‚Ä¢ Connection Test: ${{ steps.test.outputs.status }}"
          echo "‚Ä¢ System Version: ${{ env.LINKEDIN_SYSTEM_VERSION }}"
          echo "‚Ä¢ Test Complete: $(date)"
          echo ""
          if [ "${{ steps.test.outputs.status }}" = "success" ]; then
            echo "üéâ LinkedIn integration is ready for production!"
          else
            echo "‚ö†Ô∏è LinkedIn integration needs configuration"
          fi