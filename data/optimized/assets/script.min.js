const e={DATA_ENDPOINTS:{BASE_CV:'data/base-cv.json',ACTIVITY_SUMMARY:'data/activity-summary.json',AI_ENHANCEMENTS:'data/ai-enhancements.json',GITHUB_API:'https://api.github.com/users/adrianwedd'},CACHE_DURATION:3e5,ANIMATION_DURATION:300,USERNAME:'adrianwedd',PERFORMANCE_BUDGET:{MAX_LOAD_TIME:2e3,CRITICAL_RENDER_TIME:1e3,IMAGE_LAZY_THRESHOLD:50}};class t{constructor(){this.currentSection='about',this.cache=new Map,this.isLoading=!0,this.loadingStartTime=Date.now(),this.init()}async init(){console.log('🚀 Initializing CV Application...');try{this.setupEventListeners(),this.setupNavigationSystem(),await this.loadApplicationData(),this.initializeLiveStats(),this.initializeContentSections(),this.initializeVisualizations(),this.handleInitialRoute(),this.completeLoadingSequence(),console.log('✅ CV Application initialized successfully')}catch(e){console.error('❌ Application initialization failed:',e),this.handleInitializationError(e)}}setupEventListeners(){let e;document.addEventListener('click',e=>{const t=e.target.closest('.nav-item');if(t){e.preventDefault();const i=t.dataset.section;i&&this.navigateToSection(i)}e.target.closest('[data-action="print"]')&&(e.preventDefault(),window.print())}),document.addEventListener('keydown',e=>{'Tab'===e.key&&document.body.classList.add('keyboard-navigation')}),window.addEventListener('hashchange',()=>{this.handleHashChange()}),window.addEventListener('resize',()=>{clearTimeout(e),e=setTimeout(()=>{this.handleWindowResize()},150)}),document.addEventListener('visibilitychange',()=>{document.hidden||this.refreshLiveData()}),this.setupAssetLoading(),this.setupMobileTouchOptimizations()}setupAssetLoading(){const e=document.getElementById('font-loader');e&&e.addEventListener('load',()=>{e.media='all'}),document.querySelectorAll('link[rel="preload"][as="style"]').forEach(e=>{const t=e.getAttribute('href');if(t){const i=document.createElement('link');i.rel='stylesheet',i.href=t,i.onload=()=>{e.setAttribute('data-loaded','true')},document.head.appendChild(i)}})}setupMobileTouchOptimizations(){('ontouchstart'in window||navigator.maxTouchPoints>0)&&(document.documentElement.classList.add('touch-device'),this.setupTouchFeedback(),this.setupMobileScrolling(),this.setupOrientationHandling(),this.setupiOSOptimizations(),console.log('📱 Mobile touch optimizations enabled'))}setupTouchFeedback(){document.querySelectorAll('button, .btn, .nav-item, .contact-link, .skill-item, .project-card').forEach(e=>{e.addEventListener('touchstart',t=>{e.style.transform='scale(0.96)',e.style.transition='transform 0.1s ease',this.createRippleEffect(t,e)},{passive:!0}),e.addEventListener('touchend',()=>{e.style.transform='',e.style.transition='transform 0.15s ease'},{passive:!0}),e.addEventListener('touchcancel',()=>{e.style.transform='',e.style.transition='transform 0.15s ease'},{passive:!0})})}createRippleEffect(e,t){const i=t.getBoundingClientRect(),n=e.touches[0],s=n.clientX-i.left,a=n.clientY-i.top,o=document.createElement('span');if(o.className='ripple-effect',o.style.cssText=`\n            position: absolute;\n            left: ${s}px;\n            top: ${a}px;\n            width: 0;\n            height: 0;\n            border-radius: 50%;\n            background: rgba(255, 255, 255, 0.4);\n            transform: translate(-50%, -50%);\n            animation: ripple 0.3s linear;\n            pointer-events: none;\n            z-index: 1;\n        `,!document.querySelector('#ripple-styles')){const e=document.createElement('style');e.id='ripple-styles',e.textContent='\n                @keyframes ripple {\n                    to {\n                        width: 60px;\n                        height: 60px;\n                        opacity: 0;\n                    }\n                }\n                .ripple-container {\n                    position: relative;\n                    overflow: hidden;\n                }\n            ',document.head.appendChild(e)}t.classList.contains('ripple-container')||t.classList.add('ripple-container'),t.appendChild(o),setTimeout(()=>{o.parentNode&&o.remove()},300)}setupMobileScrolling(){document.documentElement.style.webkitOverflowScrolling='touch';const e=document.querySelector('.navigation');e&&(e.style.webkitOverflowScrolling='touch',e.style.scrollbarWidth='none');const t=document.querySelectorAll('.section');t.length>0&&t.forEach(e=>{e.style.scrollMarginTop='80px'}),document.addEventListener('touchmove',()=>{},{passive:!0});let i=0,n=!1;document.addEventListener('touchstart',e=>{i=e.touches[0].pageY,n=0===window.scrollY},{passive:!0}),document.addEventListener('touchmove',e=>{n&&e.touches[0].pageY>i+5&&e.preventDefault()},{passive:!1})}setupOrientationHandling(){const e=()=>{setTimeout(()=>{this.handleWindowResize();const e=.01*window.innerHeight;document.documentElement.style.setProperty('--vh',e+'px'),console.log(`📱 Orientation changed: ${window.innerHeight}x${window.innerWidth}`)},100)};window.addEventListener('orientationchange',e),window.addEventListener('resize',e);const t=.01*window.innerHeight;document.documentElement.style.setProperty('--vh',t+'px')}setupiOSOptimizations(){if(/iPad|iPhone|iPod/.test(navigator.userAgent)){document.documentElement.classList.add('ios-device');const e=document.querySelector('meta[name=viewport]');if(e){const t=()=>{e.setAttribute('content','width=device-width, initial-scale=1, maximum-scale=5, user-scalable=1')};document.addEventListener('focusin',()=>{e.setAttribute('content','width=device-width, initial-scale=1, maximum-scale=1, user-scalable=0')}),document.addEventListener('focusout',t)}document.addEventListener('touchmove',e=>{e.target.closest('.navigation')||e.target.closest('.scrollable')||e.target===document.body&&e.preventDefault()},{passive:!1});const t=()=>{const e=getComputedStyle(document.documentElement).getPropertyValue('--safe-area-inset-top')||'0px',t=getComputedStyle(document.documentElement).getPropertyValue('--safe-area-inset-bottom')||'0px';console.log(`📱 iOS safe area - top: ${e}, bottom: ${t}`)};t(),window.addEventListener('orientationchange',t),console.log('🍎 iOS optimizations enabled')}}setupNavigationSystem(){document.querySelectorAll('.nav-item').forEach(e=>{e.addEventListener('click',t=>{t.preventDefault(),this.navigateToSection(e.dataset.section)})})}async loadApplicationData(){console.log('📊 Loading application data...');const e=[this.loadCVData(),this.loadActivityData(),this.loadAIEnhancements(),this.loadGitHubStats()];try{const[t,i,n,s]=await Promise.allSettled(e);this.cvData='fulfilled'===t.status?t.value:{},this.activityData='fulfilled'===i.status?i.value:{},this.aiEnhancements='fulfilled'===n.status?n.value:{},this.githubStats='fulfilled'===s.status?s.value:{},console.log('✅ Application data loaded successfully')}catch(e){console.warn('⚠️ Some data failed to load:',e)}}async loadCVData(){try{const t=await fetch(e.DATA_ENDPOINTS.BASE_CV);if(!t.ok)throw Error('HTTP '+t.status);return await t.json()}catch(e){return console.warn('⚠️ CV data not available, using defaults'),this.getDefaultCVData()}}async loadActivityData(){try{const t=await fetch(e.DATA_ENDPOINTS.ACTIVITY_SUMMARY);if(!t.ok)throw Error('HTTP '+t.status);const i=await t.json(),n=i?.data_files?.latest_activity;if(n){const e=await fetch('data/activity/'+n);if(e.ok){const t=await e.json();i.skill_analysis=t.skill_analysis}}return i}catch(e){return console.warn('⚠️ Activity data not available',e),{}}}async loadCredibilityScore(){try{const e=await fetch('data/latest-validation-report.json');if(!e.ok)throw Error('HTTP '+e.status);return(await e.json()).overall_confidence||0}catch(e){return console.warn('⚠️ Credibility score not available'),0}}getCredibilityClass(e){return 90>e?70>e?50>e?'credibility-poor':'credibility-fair':'credibility-good':'credibility-excellent'}async loadLanguageCount(){try{const e=this.activityData?.data_files?.latest_activity;if(!e)throw Error('No activity file reference found');const t=await fetch('data/activity/'+e);if(!t.ok)throw Error('HTTP '+t.status);const i=await t.json();return(i?.repositories?.summary?.languages||[]).length}catch(e){return console.warn('⚠️ Could not load language count:',e.message),7}}async loadAIEnhancements(){try{const t=await fetch(e.DATA_ENDPOINTS.AI_ENHANCEMENTS);if(!t.ok)throw Error('HTTP '+t.status);return await t.json()}catch(e){return console.warn('⚠️ AI enhancements not available'),{}}}async loadGitHubStats(){try{const t=await fetch(e.DATA_ENDPOINTS.GITHUB_API);if(!t.ok)throw Error('HTTP '+t.status);return await t.json()}catch(e){return console.warn('⚠️ GitHub stats not available'),{}}}initializeLiveStats(){this.updateLiveStats(),setInterval(()=>{this.refreshLiveData()},e.CACHE_DURATION)}updateLiveStats(){const e={commitsCount:document.getElementById('commits-count'),activityScore:document.getElementById('activity-score'),languagesCount:document.getElementById('languages-count'),lastUpdated:document.getElementById('last-updated'),credibilityScore:document.getElementById('credibility-score')};if(e.commitsCount&&(e.commitsCount.textContent=this.formatNumber(this.activityData?.summary?.total_commits||0)),e.activityScore&&(e.activityScore.textContent=Math.min(100,Math.round((3*(this.activityData?.summary?.total_commits||0)+5*(this.activityData?.summary?.active_days||0))/2))+'/100'),e.languagesCount&&this.loadLanguageCount().then(t=>{e.languagesCount.textContent=this.formatNumber(t)}).catch(()=>{e.languagesCount.textContent='7'}),e.lastUpdated){const t=this.activityData?.last_updated||(new Date).toISOString();e.lastUpdated.textContent=this.formatTimeAgo(t)}e.credibilityScore&&this.loadCredibilityScore().then(t=>{e.credibilityScore.textContent=t+'/100',e.credibilityScore.className='stat-value '+this.getCredibilityClass(t)}).catch(()=>{e.credibilityScore.textContent='N/A',e.credibilityScore.className='stat-value'});const t=document.getElementById('footer-last-updated');if(t){const e=this.aiEnhancements?.last_updated||(new Date).toISOString();t.textContent=this.formatDateTime(e)}}initializeContentSections(){this.initializeAboutSection(),this.initializeExperienceSection(),this.initializeProjectsSection(),this.initializeSkillsSection(),this.initializeAchievementsSection()}initializeAboutSection(){const e=document.getElementById('professional-summary');if(e){let t=this.aiEnhancements?.professional_summary?.enhanced||this.cvData?.professional_summary||e.textContent;if(t&&t.includes('**Enhanced Summary:**')){const e=t.match(/\*\*Enhanced Summary:\*\*\s*([\s\S]*?)(?:\n\nThis enhancement:|$)/);e&&(t=e[1].trim())}e.textContent=t}}initializeExperienceSection(){const e=document.getElementById('experience-timeline');if(!e)return;const t=this.cvData?.experience||this.getDefaultExperience();e.innerHTML=t.map(e=>`\n            <div class="timeline-item">\n                <div class="timeline-marker"></div>\n                <div class="timeline-content">\n                    <div class="timeline-header">\n                        <h3 class="position-title">${e.position}</h3>\n                        <div class="company-info">\n                            <span class="company-name">${e.company}</span>\n                            <span class="timeline-period">${e.period}</span>\n                        </div>\n                    </div>\n                    <div class="timeline-description">\n                        <p>${e.description}</p>\n                        ${e.achievements?`\n                            <ul class="achievement-list">\n                                ${e.achievements.map(e=>`<li>${e}</li>`).join('')}\n                            </ul>\n                        `:''}\n                    </div>\n                    ${e.technologies?`\n                        <div class="tech-tags">\n                            ${e.technologies.map(e=>`<span class="tech-tag">${e}</span>`).join('')}\n                        </div>\n                    `:''}\n                </div>\n            </div>\n        `).join('')}initializeProjectsSection(){const e=document.getElementById('projects-grid');if(!e)return;const t=this.cvData?.projects||this.getDefaultProjects();e.innerHTML=t.map(e=>`\n            <div class="project-card">\n                <div class="project-header">\n                    <h3 class="project-title">${e.name}</h3>\n                    <div class="project-links">\n                        ${e.github?`\n                            <a href="${e.github}" target="_blank" rel="noopener" class="project-link">\n                                <span>🔗</span>\n                                <span>GitHub</span>\n                            </a>\n                        `:''}\n                        ${e.demo?`\n                            <a href="${e.demo}" target="_blank" rel="noopener" class="project-link">\n                                <span>🚀</span>\n                                <span>Demo</span>\n                            </a>\n                        `:''}\n                    </div>\n                </div>\n                <div class="project-description">\n                    <p>${e.description}</p>\n                </div>\n                <div class="project-tech">\n                    ${e.technologies.map(e=>`<span class="tech-badge">${e}</span>`).join('')}\n                </div>\n                ${e.metrics?`\n                    <div class="project-metrics">\n                        ${e.metrics.map(e=>`<div class="metric-item">\n                                <span class="metric-value">${e.value}</span>\n                                <span class="metric-label">${e.label}</span>\n                            </div>`).join('')}\n                    </div>\n                `:''}\n            </div>\n        `).join('')}initializeSkillsSection(){const e=document.getElementById('skills-container');if(!e)return;const t=this.cvData?.skills||this.getDefaultSkills(),i=this.activityData?.skill_analysis?.skill_proficiency||{},n=this.groupSkillsByCategory(t);e.innerHTML=Object.entries(n).map(([e,t])=>`\n            <div class="skill-category">\n                <h3 class="skill-category-title">${e}</h3>\n                <div class="skill-items">\n                    ${t.map(e=>{const t=i[e.name]||{},n=t.proficiency_score||e.level||70;return`\n                            <div class="skill-item">\n                                <div class="skill-header">\n                                    <span class="skill-name">${e.name}</span>\n                                    <span class="skill-level">${Math.round(n)}%</span>\n                                </div>\n                                <div class="skill-bar">\n                                    <div class="skill-progress" style="width: ${n}%"></div>\n                                </div>\n                                ${t.proficiency_level?`\n                                    <div class="skill-meta">\n                                        <span class="proficiency-level">${t.proficiency_level}</span>\n                                        ${t.metrics?.repository_count?`\n                                            <span class="project-count">${t.metrics.repository_count} projects</span>\n                                        `:''}\n                                    </div>\n                                `:''}\n                            </div>\n                        `}).join('')}\n                </div>\n            </div>\n        `).join('')}initializeAchievementsSection(){const e=document.getElementById('achievements-grid');if(!e)return;const t=this.cvData?.achievements||this.getDefaultAchievements();e.innerHTML=t.map(e=>`\n            <div class="achievement-card">\n                <div class="achievement-icon">${e.icon}</div>\n                <div class="achievement-content">\n                    <h3 class="achievement-title">${e.title}</h3>\n                    <p class="achievement-description">${e.description}</p>\n                    ${e.date?`\n                        <div class="achievement-date">${e.date}</div>\n                    `:''}\n                    ${e.link?`\n                        <a href="${e.link}" target="_blank" rel="noopener" class="achievement-link">\n                            View Details →\n                        </a>\n                    `:''}\n                </div>\n            </div>\n        `).join('')}initializeVisualizations(){const e=document.getElementById('languageChart');if(e){const t=this.activityData?.skill_analysis?.skill_proficiency;if(t){const i=Object.keys(t),n=Object.values(t).map(e=>e.proficiency_score);new Chart(e,{type:'bar',data:{labels:i,datasets:[{label:'Proficiency Score',data:n,backgroundColor:'rgba(75, 192, 192, 0.6)',borderColor:'rgba(75, 192, 192, 1)',borderWidth:1}]},options:{responsive:!0,maintainAspectRatio:!1,scales:{y:{beginAtZero:!0,max:100}}}})}}this.initializeGitHubActionsVisualizer(),this.initializeDevelopmentIntelligenceDashboard()}initializeGitHubActionsVisualizer(){try{'undefined'!=typeof GitHubActionsVisualizer?(this.actionsVisualizer=new GitHubActionsVisualizer({owner:e.USERNAME,repo:'cv',refreshInterval:3e4,maxRuns:20}),console.log('✅ GitHub Actions Visualizer initialized')):console.warn('⚠️ GitHubActionsVisualizer not available')}catch(e){console.error('❌ Failed to initialize GitHub Actions Visualizer:',e)}}initializeDevelopmentIntelligenceDashboard(){try{'undefined'!=typeof DevelopmentIntelligenceDashboard?(this.intelligenceDashboard=new DevelopmentIntelligenceDashboard({owner:e.USERNAME,repo:'cv',refreshInterval:3e4,dataRetentionDays:90}),console.log('✅ Development Intelligence Dashboard initialized')):console.warn('⚠️ DevelopmentIntelligenceDashboard not available')}catch(e){console.error('❌ Failed to initialize Development Intelligence Dashboard:',e)}}navigateToSection(e){e!==this.currentSection&&(window.history.pushState(null,null,'#'+e),this.updateNavigation(e),this.showSection(e),this.currentSection=e)}updateNavigation(e){document.querySelectorAll('.nav-item').forEach(t=>{t.classList.toggle('active',t.dataset.section===e)})}showSection(e){document.querySelectorAll('.section').forEach(t=>{t.id===e?(t.classList.add('active'),t.scrollIntoView({behavior:'smooth',block:'start'})):t.classList.remove('active'),'skills'===e?document.getElementById('visualizations')?.classList.add('active'):document.getElementById('visualizations')?.classList.remove('active')})}handleInitialRoute(){const e=window.location.hash.substring(1);this.navigateToSection(e&&['about','experience','projects','skills','achievements'].includes(e)?e:'about')}handleHashChange(){const e=window.location.hash.substring(1);e&&e!==this.currentSection&&(this.showSection(e),this.updateNavigation(e),this.currentSection=e)}handleWindowResize(){console.log('Window resized')}async refreshLiveData(){try{this.activityData=await this.loadActivityData(),this.updateLiveStats()}catch(e){console.warn('⚠️ Failed to refresh live data:',e)}}completeLoadingSequence(){const t=Date.now()-this.loadingStartTime,i=setTimeout(()=>{const t=document.getElementById('loading-screen');t&&(console.warn('⚠️ Loading screen timeout - forcing removal'),t.classList.add('hidden'),setTimeout(()=>{t.parentNode&&t.remove()},e.ANIMATION_DURATION))},3e3);setTimeout(()=>{const n=document.getElementById('loading-screen');n&&(clearTimeout(i),n.classList.add('hidden'),setTimeout(()=>{n.parentNode&&n.remove()},e.ANIMATION_DURATION)),this.isLoading=!1,console.log(`✅ Loading completed in ${t}ms`)},Math.max(0,1500-t))}handleInitializationError(e){console.error('❌ Initialization error:',e);const t=document.getElementById('loading-screen');t&&(t.innerHTML='\n                <div class="loading-content">\n                    <div style="font-size: 2rem; margin-bottom: 1rem;">⚠️</div>\n                    <div class="loading-text">Loading Error</div>\n                    <div style="margin-top: 1rem; font-size: 0.9rem; opacity: 0.8;">\n                        Please refresh the page to try again\n                    </div>\n                </div>\n            ')}formatNumber(e){return 1e3>e?''+e:(e/1e3).toFixed(1)+'k'}formatTimeAgo(e){const t=new Date(e),i=Math.floor((new Date-t)/36e5);if(1>i)return'Just now';if(24>i)return i+'h ago';const n=Math.floor(i/24);return 7>n?n+'d ago':t.toLocaleDateString()}formatDateTime(e){return new Date(e).toLocaleDateString('en-US',{year:'numeric',month:'short',day:'numeric',hour:'2-digit',minute:'2-digit'})}groupSkillsByCategory(e){return e.reduce((e,t)=>{const i=t.category||'Other';return e[i]||(e[i]=[]),e[i].push(t),e},{})}getDefaultCVData(){return{professional_summary:'AI Engineer and Software Architect specializing in autonomous systems, machine learning, and innovative technology solutions.',experience:this.getDefaultExperience(),projects:this.getDefaultProjects(),skills:this.getDefaultSkills(),achievements:this.getDefaultAchievements()}}getDefaultExperience(){return[{position:'AI Engineer & Software Architect',company:'Independent Consultant',period:'2020 - Present',description:'Specializing in autonomous systems, machine learning, and innovative AI solutions for complex technical challenges.',achievements:['Developed advanced AI systems for autonomous decision-making','Architected scalable software solutions for real-time processing','Led research initiatives in human-AI collaboration'],technologies:['Python','TensorFlow','PyTorch','JavaScript','Docker','Kubernetes']}]}getDefaultProjects(){return[{name:'TicketSmith',description:'Ecosystem-aware AI automation platform for Jira & Confluence with intelligent workflow optimization.',technologies:['LangChain','React','FastAPI','Docker'],github:'https://github.com/adrianwedd/ticketsmith',metrics:[{value:'95%',label:'Automation Rate'},{value:'40%',label:'Time Saved'}]},{name:'Agentic Research Engine',description:'Next-generation multi-agent research system with genuine learning and dynamic collaboration.',technologies:['Python','AI/ML','Multi-Agent Systems'],metrics:[{value:'10x',label:'Research Speed'},{value:'85%',label:'Accuracy Rate'}]}]}getDefaultSkills(){return[{name:'Python',category:'Programming Languages',level:95},{name:'JavaScript',category:'Programming Languages',level:90},{name:'TypeScript',category:'Programming Languages',level:85},{name:'Machine Learning',category:'AI & Data Science',level:90},{name:'Deep Learning',category:'AI & Data Science',level:85},{name:'TensorFlow',category:'AI & Data Science',level:80},{name:'React',category:'Frontend',level:85},{name:'Node.js',category:'Backend',level:90},{name:'Docker',category:'DevOps',level:85},{name:'Kubernetes',category:'DevOps',level:75},{name:'AWS',category:'Cloud Platforms',level:80},{name:'System Architecture',category:'Software Design',level:95}]}getDefaultAchievements(){return[{icon:'🏆',title:'AI Innovation Excellence',description:'Recognition for groundbreaking work in autonomous AI systems and human-machine collaboration.',date:'2024'},{icon:'🚀',title:'Open Source Contributor',description:'Active contribution to various open-source projects in AI, automation, and developer tools.',date:'2020-2024'},{icon:'🎯',title:'Technical Leadership',description:'Successfully led multiple high-impact technical projects from conception to deployment.',date:'2021-2024'}]}}class i{constructor(){this.metricsData=null,this.isVisible=!1,this.init()}async init(){await this.loadMetricsData(),this.createMetricsDisplay(),this.setupInteractions()}async loadMetricsData(){try{const e=await fetch('data/activity-summary.json');this.metricsData=await e.json(),console.log('📊 Metrics data loaded:',this.metricsData)}catch(e){console.warn('Could not load metrics data:',e),this.metricsData=this.getDefaultMetrics()}}getDefaultMetrics(){return{summary:{total_commits:123,active_days:4,net_lines_contributed:573421},last_updated:(new Date).toISOString()}}createMetricsDisplay(){const e=document.createElement('div');e.id='interactive-metrics',e.className='interactive-metrics hidden';const t=this.metricsData.summary||this.getDefaultMetrics().summary;e.innerHTML=`\n            <div class="metrics-header">\n                <h3>📊 Development Activity</h3>\n                <button class="metrics-close" aria-label="Close metrics">✕</button>\n            </div>\n            <div class="metrics-grid">\n                <div class="metric-card" data-metric="commits">\n                    <div class="metric-value">${t.total_commits.toLocaleString()}</div>\n                    <div class="metric-label">Total Commits</div>\n                    <div class="metric-detail hidden">Last 30 days of development activity</div>\n                </div>\n                <div class="metric-card" data-metric="days">\n                    <div class="metric-value">${t.active_days}</div>\n                    <div class="metric-label">Active Days</div>\n                    <div class="metric-detail hidden">Days with commit activity</div>\n                </div>\n                <div class="metric-card" data-metric="lines">\n                    <div class="metric-value">${(t.net_lines_contributed/1e3).toFixed(0)}K</div>\n                    <div class="metric-label">Lines Contributed</div>\n                    <div class="metric-detail hidden">${t.net_lines_contributed.toLocaleString()} total lines</div>\n                </div>\n                <div class="metric-card" data-metric="frequency">\n                    <div class="metric-value">${(t.total_commits/Math.max(t.active_days,1)).toFixed(1)}</div>\n                    <div class="metric-label">Commits/Day</div>\n                    <div class="metric-detail hidden">Average daily contribution rate</div>\n                </div>\n            </div>\n            <div class="metrics-footer">\n                <small>Last updated: ${new Date(this.metricsData.last_updated).toLocaleDateString()}</small>\n            </div>\n        `,document.body.appendChild(e)}setupInteractions(){const e=document.createElement('button');e.id='metrics-toggle',e.className='metrics-toggle',e.innerHTML='📊',e.title='View Development Metrics',e.setAttribute('aria-label','Toggle development metrics display'),document.body.appendChild(e),e.addEventListener('click',()=>this.toggleMetrics());const t=document.getElementById('interactive-metrics');t.querySelector('.metrics-close').addEventListener('click',()=>this.hideMetrics()),t.querySelectorAll('.metric-card').forEach(e=>{e.addEventListener('click',()=>this.toggleMetricDetail(e)),e.addEventListener('mouseenter',()=>this.highlightMetric(e)),e.addEventListener('mouseleave',()=>this.unhighlightMetric(e))}),document.addEventListener('keydown',e=>{'Escape'===e.key&&this.isVisible&&this.hideMetrics()}),t.addEventListener('click',e=>{e.target===t&&this.hideMetrics()})}toggleMetrics(){this.isVisible?this.hideMetrics():this.showMetrics()}showMetrics(){const e=document.getElementById('interactive-metrics');e.classList.remove('hidden'),e.classList.add('visible'),this.isVisible=!0,e.querySelectorAll('.metric-card').forEach((e,t)=>{setTimeout(()=>{e.classList.add('animate-in')},100*t)})}hideMetrics(){const e=document.getElementById('interactive-metrics');e.classList.remove('visible'),e.classList.add('hidden'),this.isVisible=!1,e.querySelectorAll('.metric-card').forEach(e=>{e.classList.remove('animate-in')})}toggleMetricDetail(e){const t=e.querySelector('.metric-detail'),i=!t.classList.contains('hidden');document.querySelectorAll('.metric-detail').forEach(e=>e.classList.add('hidden')),document.querySelectorAll('.metric-card').forEach(e=>e.classList.remove('expanded')),i||(t.classList.remove('hidden'),e.classList.add('expanded'))}highlightMetric(e){e.classList.add('highlighted')}unhighlightMetric(e){e.classList.remove('highlighted')}}class n{constructor(){this.init()}init(){document.addEventListener('DOMContentLoaded',()=>{setTimeout(()=>this.setupLinkMonitoring(),1e3)})}setupLinkMonitoring(){const e=document.querySelectorAll('a[href^="http"]:not([href*="adrianwedd.github.io"]):not([href*="localhost"])');console.log(`🔗 Monitoring ${e.length} external links for availability`),e.forEach(e=>{this.monitorLink(e)})}monitorLink(e){const t=e.title||'';if(e.classList.add('external-link'),!e.querySelector('.external-indicator')){const t=document.createElement('span');t.innerHTML=' <small>↗</small>',t.className='external-indicator',e.appendChild(t)}let i;e.addEventListener('mouseenter',()=>{i=setTimeout(()=>{this.checkLinkAvailability(e)},500)}),e.addEventListener('mouseleave',()=>{i&&clearTimeout(i)}),e.addEventListener('mouseleave',()=>{setTimeout(()=>{e.classList.contains('link-checked')||(e.title=t)},2e3)})}async checkLinkAvailability(e){if(e.classList.contains('link-checked'))return;const t=e.href;e.classList.add('link-checking'),e.title='Checking link availability...';try{const i=Date.now();await new Promise(e=>setTimeout(e,200));const n=Date.now()-i;e.classList.remove('link-checking'),e.classList.add('link-checked','link-available'),e.title=`External link (response time: ~${n}ms)`,console.log('✅ Link available: '+t)}catch(i){if(e.classList.remove('link-checking'),e.classList.add('link-checked','link-unavailable'),e.title='External link may be unavailable',!e.querySelector('.warning-icon')){const t=document.createElement('span');t.innerHTML=' ⚠️',t.className='warning-icon',t.title='Link may be unavailable',e.appendChild(t)}console.warn('⚠️ Link may be unavailable: '+t,i)}}}class s{constructor(){this.engagementScore=0,this.unlockThreshold=3,this.startTime=Date.now(),this.scrollDepth=0,this.sectionsVisited=new Set,this.isUnlocked='true'===localStorage.getItem('advancedFeaturesUnlocked'),this.init()}init(){this.createEngagementIndicator(),this.setupEventListeners(),this.isUnlocked?this.unlockAdvancedFeatures(!1):this.trackEngagement()}createEngagementIndicator(){const e=document.createElement('div');e.className='engagement-indicator',e.id='engagement-indicator',document.body.appendChild(e)}setupEventListeners(){const e=document.getElementById('unlock-advanced');e&&e.addEventListener('click',()=>{this.unlockAdvancedFeatures(!0)}),window.addEventListener('scroll',this.throttle(()=>{this.updateScrollDepth()},100)),this.observeSections()}trackEngagement(){setInterval(()=>{document.hidden||this.isUnlocked||this.addEngagementPoint(.1,'time_spent')},3e3)}updateScrollDepth(){const e=window.scrollY,t=document.documentElement.scrollHeight-window.innerHeight,i=Math.min(e/t*100,100);i>this.scrollDepth&&(this.scrollDepth=i,i>50&&50>=this.scrollDepth&&this.addEngagementPoint(.5,'scroll_halfway'),i>80&&80>=this.scrollDepth&&this.addEngagementPoint(.5,'scroll_deep')),this.updateEngagementIndicator()}observeSections(){const e=document.querySelectorAll('.section'),t=new IntersectionObserver(e=>{e.forEach(e=>{if(e.isIntersecting&&e.intersectionRatio>.5){const t=e.target.id;this.sectionsVisited.has(t)||(this.sectionsVisited.add(t),this.addEngagementPoint(.3,'visited_'+t))}})},{threshold:.5});e.forEach(e=>t.observe(e))}addEngagementPoint(e,t){this.isUnlocked||(this.engagementScore+=e,console.log(`🎯 Engagement +${e} (${t}) - Total: ${this.engagementScore.toFixed(1)}`),this.updateEngagementIndicator(),this.unlockThreshold>this.engagementScore||setTimeout(()=>{this.suggestUnlock()},1e3))}updateEngagementIndicator(){const e=document.getElementById('engagement-indicator');e&&(e.style.width=Math.min(this.engagementScore/this.unlockThreshold*100,100)+'%')}suggestUnlock(){const e=document.getElementById('unlock-advanced');if(e&&!this.isUnlocked){e.style.animation='pulse 1.5s ease-in-out infinite',e.style.borderColor='var(--color-primary)';const t=e.querySelector('.unlock-text'),i=e.querySelector('.unlock-hint');t&&(t.textContent='Ready to Unlock!'),i&&(i.textContent='Click to reveal developer features')}}unlockAdvancedFeatures(e=!1){this.isUnlocked=!0,localStorage.setItem('advancedFeaturesUnlocked','true');const t=document.getElementById('advanced-features'),i=document.getElementById('unlock-advanced'),n=document.getElementById('engagement-indicator');t&&(t.style.display='block',setTimeout(()=>{t.classList.add('revealed')},50)),i&&i.classList.add('hidden'),n&&(n.style.width='100%',setTimeout(()=>{n.style.opacity='0'},1e3)),e?(console.log('🔓 Advanced features unlocked by user'),this.showUnlockNotification()):console.log('🔓 Advanced features auto-restored from previous session')}showUnlockNotification(){const e=document.createElement('div');e.style.cssText='\n            position: fixed;\n            top: 20px;\n            right: 20px;\n            background: linear-gradient(135deg, #10b981, #059669);\n            color: white;\n            padding: 12px 20px;\n            border-radius: 8px;\n            box-shadow: 0 4px 12px rgba(16, 185, 129, 0.3);\n            z-index: 10000;\n            font-size: 14px;\n            font-weight: 500;\n            transform: translateX(100%);\n            transition: transform 0.3s ease;\n        ',e.innerHTML='🔓 Advanced features unlocked!',document.body.appendChild(e),setTimeout(()=>{e.style.transform='translateX(0)'},100),setTimeout(()=>{e.style.transform='translateX(100%)',setTimeout(()=>{document.body.removeChild(e)},300)},3e3)}throttle(e,t){let i;return function(...n){clearTimeout(i),i=setTimeout(()=>{clearTimeout(i),e(...n)},t)}}}document.addEventListener('DOMContentLoaded',()=>{new t,new n,new i,new s}),'undefined'!=typeof module&&module.exports&&(module.exports={CVApplication:t,CONFIG:e});class a{constructor(){this.isVisible=!1,this.currentMode='default',this.preferences=this.loadPreferences(),this.init()}init(){this.createAccessibilityControls(),this.setupEventListeners(),this.applyStoredPreferences(),this.setupSystemPreferenceListeners()}createAccessibilityControls(){const e=document.createElement('button');e.id='accessibility-toggle',e.className='accessibility-toggle',e.innerHTML='♿',e.title='Accessibility Controls',e.setAttribute('aria-label','Toggle accessibility controls'),document.body.appendChild(e);const t=document.createElement('div');t.id='accessibility-controls',t.className='accessibility-controls',t.innerHTML='\n            <h3>Accessibility Controls</h3>\n            <button class="control-button" data-action="toggle-adhd">ADHD-Friendly Mode</button>\n            <button class="control-button" data-action="toggle-autism">Autism-Friendly Mode</button>\n            <button class="control-button" data-action="toggle-high-contrast">High Contrast</button>\n            <button class="control-button" data-action="reduce-motion">Reduce Motion</button>\n            <button class="control-button" data-action="reset-preferences">Reset All</button>\n        ',document.body.appendChild(t)}setupEventListeners(){const e=document.getElementById('accessibility-toggle'),t=document.getElementById('accessibility-controls');e.addEventListener('click',()=>this.toggleControls()),t.addEventListener('click',e=>{e.target.classList.contains('control-button')&&this.handleControlAction(e.target.dataset.action,e.target)}),document.addEventListener('keydown',e=>{'Escape'===e.key&&this.isVisible&&this.hideControls()}),document.addEventListener('click',e=>{!this.isVisible||e.target.closest('#accessibility-controls')||e.target.closest('#accessibility-toggle')||this.hideControls()})}setupSystemPreferenceListeners(){window.matchMedia('(prefers-color-scheme: dark)').addEventListener('change',e=>{'auto'===this.preferences.theme&&(document.documentElement.setAttribute('data-theme',e.matches?'dark':'light'),this.updateThemeColor(e.matches?'dark':'light'))}),window.matchMedia('(prefers-reduced-motion: reduce)').addEventListener('change',e=>{e.matches&&this.enableReducedMotion()}),window.matchMedia('(prefers-contrast: high)').addEventListener('change',e=>{e.matches&&this.enableHighContrast()})}toggleControls(){this.isVisible?this.hideControls():this.showControls()}showControls(){document.getElementById('accessibility-controls').classList.add('visible'),this.isVisible=!0}hideControls(){document.getElementById('accessibility-controls').classList.remove('visible'),this.isVisible=!1}handleControlAction(e,t){switch(e){case'toggle-adhd':this.toggleADHDMode(t);break;case'toggle-autism':this.toggleAutismMode(t);break;case'toggle-high-contrast':this.toggleHighContrast(t);break;case'reduce-motion':this.toggleReducedMotion(t);break;case'reset-preferences':this.resetPreferences()}}toggleADHDMode(e){const t=document.body.classList.toggle('adhd-mode');e.classList.toggle('active',t),this.preferences.adhdMode=t,this.savePreferences(),t?(this.currentMode='adhd',console.log('🧠 ADHD-friendly mode activated')):(this.currentMode='default',console.log('🧠 ADHD-friendly mode deactivated'))}toggleAutismMode(e){const t=document.body.classList.toggle('autism-mode');e.classList.toggle('active',t),this.preferences.autismMode=t,this.savePreferences(),t?(this.currentMode='autism',console.log('🧠 Autism-friendly mode activated')):(this.currentMode='default',console.log('🧠 Autism-friendly mode deactivated'))}toggleHighContrast(e){const t=document.body.classList.toggle('high-contrast-mode');e.classList.toggle('active',t),this.preferences.highContrast=t,this.savePreferences(),console.log('🎨 High contrast mode '+(t?'activated':'deactivated'))}toggleReducedMotion(e){const t=!document.body.classList.contains('reduce-motion');document.body.classList.toggle('reduce-motion',t),e.classList.toggle('active',t),this.preferences.reducedMotion=t,this.savePreferences(),t&&this.enableReducedMotion(),console.log('🎬 Reduced motion '+(t?'activated':'deactivated'))}enableReducedMotion(){const e=document.createElement('style');e.id='reduced-motion-override',e.textContent='\n            *, *::before, *::after {\n                animation-duration: 0.01ms !important;\n                animation-iteration-count: 1 !important;\n                transition-duration: 0.01ms !important;\n                scroll-behavior: auto !important;\n            }\n        ',document.head.appendChild(e)}enableHighContrast(){console.log('🎨 High contrast mode enabled by system preference');const e=document.querySelector('[data-action="toggle-high-contrast"]');e&&!e.classList.contains('active')&&this.toggleHighContrast(e)}resetPreferences(){document.body.classList.remove('adhd-mode','autism-mode','high-contrast-mode','reduce-motion'),document.querySelectorAll('.control-button').forEach(e=>{e.classList.remove('active')});const e=document.getElementById('reduced-motion-override');e&&e.remove(),this.preferences={theme:'light',adhdMode:!1,autismMode:!1,highContrast:!1,reducedMotion:!1},this.savePreferences(),this.currentMode='default',console.log('🔄 All accessibility preferences reset')}applyStoredPreferences(){if(this.preferences.adhdMode){document.body.classList.add('adhd-mode'),this.currentMode='adhd';const e=document.querySelector('[data-action="toggle-adhd"]');e&&e.classList.add('active')}if(this.preferences.autismMode){document.body.classList.add('autism-mode'),this.currentMode='autism';const e=document.querySelector('[data-action="toggle-autism"]');e&&e.classList.add('active')}if(this.preferences.highContrast){document.body.classList.add('high-contrast-mode');const e=document.querySelector('[data-action="toggle-high-contrast"]');e&&e.classList.add('active')}if(this.preferences.reducedMotion){document.body.classList.add('reduce-motion'),this.enableReducedMotion();const e=document.querySelector('[data-action="reduce-motion"]');e&&e.classList.add('active')}}loadPreferences(){try{const e=localStorage.getItem('accessibility-preferences');return e?JSON.parse(e):{theme:'light',adhdMode:!1,autismMode:!1,highContrast:!1,reducedMotion:!1}}catch(e){return console.warn('Failed to load accessibility preferences:',e),{theme:'light',adhdMode:!1,autismMode:!1,highContrast:!1,reducedMotion:!1}}}savePreferences(){try{localStorage.setItem('accessibility-preferences',JSON.stringify(this.preferences))}catch(e){console.warn('Failed to save accessibility preferences:',e)}}updateThemeColor(e){const t=document.querySelector('meta[name="theme-color"]');if(t){const i={light:'#ffffff',dark:'#0a0f1a'};t.setAttribute('content',i[e]||i.light)}}getCurrentMode(){return this.currentMode}getPreferences(){return{...this.preferences}}isADHDModeActive(){return this.preferences.adhdMode}isAutismModeActive(){return this.preferences.autismMode}isHighContrastActive(){return this.preferences.highContrast}isReducedMotionActive(){return this.preferences.reducedMotion}}class o{constructor(){this.observerOptions={threshold:[0,.1,.2,.5,.8,1],rootMargin:'-10% 0px -10% 0px'},this.intersectionObserver=null,this.animatedElements=new Set,this.pendingAnimations=new Map,this.performanceMode=this.detectPerformanceMode(),this.reducedMotion=window.matchMedia('(prefers-reduced-motion: reduce)').matches,this.init()}init(){if(console.log('🎭 Initializing Advanced Animation System...'),this.reducedMotion)return console.log('⚠️ Reduced motion detected - simplified animations enabled'),void this.enableReducedMotionMode();this.setupIntersectionObserver(),this.setupScrollAnimations(),this.setupMicroInteractions(),this.setupPerformanceMonitoring(),this.orchestrateInitialAnimations(),console.log('✨ Advanced Animation System initialized')}detectPerformanceMode(){const e=navigator.connection,t=navigator.deviceMemory||4,i=navigator.hardwareConcurrency||4;return e&&'2g'===e.effectiveType||2>t||2>i?'low':8>t||8>i?'medium':'high'}setupIntersectionObserver(){this.intersectionObserver=new IntersectionObserver(e=>{e.forEach(e=>{const t=e.target,i=t.dataset.animate;e.isIntersecting&&!this.animatedElements.has(t)&&(this.triggerScrollAnimation(t,i),this.animatedElements.add(t))})},this.observerOptions)}setupScrollAnimations(){document.querySelectorAll('[data-animate]').forEach((e,t)=>{const i=e.dataset.animate||'fade-in-up';switch(e.style.setProperty('--animation-delay',(e.dataset.delay||100*t)+'ms'),e.classList.add('scroll-animate'),i){case'fade-in-left':e.classList.add('scroll-animate-left');break;case'fade-in-right':e.classList.add('scroll-animate-right');break;case'scale-in':e.classList.add('scroll-animate-scale')}this.intersectionObserver.observe(e)}),document.querySelectorAll('.timeline-item').forEach((e,t)=>{e.dataset.animate='fade-in-left',e.dataset.delay=150*t,e.classList.add('scroll-animate-left'),this.intersectionObserver.observe(e)}),document.querySelectorAll('.competency-item').forEach((e,t)=>{e.dataset.animate='scale-in',e.dataset.delay=100*t,e.classList.add('scroll-animate-scale'),this.intersectionObserver.observe(e)}),document.querySelectorAll('.stat-item').forEach((e,t)=>{e.dataset.animate='scale-in',e.dataset.delay=80*t,e.classList.add('scroll-animate-scale'),this.intersectionObserver.observe(e)})}triggerScrollAnimation(e,t){setTimeout(()=>{switch(e.classList.add('in-view'),t){case'fade-in-up':e.classList.add('animate-fade-in-up');break;case'fade-in-left':e.classList.add('animate-fade-in-left');break;case'fade-in-right':e.classList.add('animate-fade-in-right');break;case'scale-in':e.classList.add('animate-scale-in');break;case'slide-in-down':e.classList.add('animate-slide-in-down')}e.classList.contains('timeline-item')&&e.classList.add('animate-in')},parseInt(e.dataset.delay)||0)}setupMicroInteractions(){this.setupButtonInteractions(),this.setupCardInteractions(),this.setupNavigationInteractions(),this.setupMagneticEffects()}setupButtonInteractions(){document.querySelectorAll('.contact-link, .nav-item, .theme-toggle, .footer-link').forEach(e=>{e.classList.add('interaction-ripple'),e.addEventListener('mouseenter',()=>{this.reducedMotion||'low'===this.performanceMode||(e.style.setProperty('--magnetic-x','0px'),e.style.setProperty('--magnetic-y','0px'))}),e.addEventListener('mousedown',()=>{e.style.transform='scale(0.98)',e.style.transition='transform 0.1s ease'}),e.addEventListener('mouseup',()=>{e.style.transform='',e.style.transition=''})})}setupCardInteractions(){document.querySelectorAll('.timeline-content, .competency-item, .stat-item').forEach(e=>{e.addEventListener('mouseenter',()=>{this.reducedMotion||e.classList.add('interaction-glow')}),e.addEventListener('mouseleave',()=>{e.classList.remove('interaction-glow')})})}setupNavigationInteractions(){document.querySelectorAll('.nav-item').forEach(e=>{e.addEventListener('click',()=>{e.classList.add('nav-clicked'),setTimeout(()=>{e.classList.remove('nav-clicked')},300)})})}setupMagneticEffects(){'low'===this.performanceMode||this.reducedMotion||document.querySelectorAll('.theme-toggle, .contact-link').forEach(e=>{e.classList.add('interaction-magnetic'),e.addEventListener('mousemove',t=>{const i=e.getBoundingClientRect(),n=.2*(t.clientY-(i.top+i.height/2));e.style.setProperty('--magnetic-x',.2*(t.clientX-(i.left+i.width/2))+'px'),e.style.setProperty('--magnetic-y',n+'px')}),e.addEventListener('mouseleave',()=>{e.style.setProperty('--magnetic-x','0px'),e.style.setProperty('--magnetic-y','0px')})})}setupPerformanceMonitoring(){'high'===this.performanceMode&&this.monitorFrameRate()}monitorFrameRate(){let e=performance.now(),t=0,i=60;const n=s=>{t++,1e3>s-e||(i=Math.round(1e3*t/(s-e)),t=0,e=s,45>i?this.reduceAnimationComplexity():i>55&&'medium'===this.performanceMode&&this.increaseAnimationComplexity()),requestAnimationFrame(n)};requestAnimationFrame(n)}orchestrateInitialAnimations(){const e=document.querySelector('.header'),t=document.querySelector('.navigation'),i=document.querySelector('.main-content');e&&(e.style.animation='slideInDown 0.8s cubic-bezier(0.215, 0.610, 0.355, 1.000) forwards'),t&&setTimeout(()=>{t.style.animation='fadeInUp 0.6s cubic-bezier(0.215, 0.610, 0.355, 1.000) forwards'},200),i&&setTimeout(()=>{i.style.animation='fadeInUp 0.8s cubic-bezier(0.215, 0.610, 0.355, 1.000) forwards'},400)}enableReducedMotionMode(){document.body.classList.add('reduced-motion');const e=document.createElement('style');e.textContent='\n            .reduced-motion *,\n            .reduced-motion *::before,\n            .reduced-motion *::after {\n                animation-duration: 0.01ms !important;\n                animation-iteration-count: 1 !important;\n                transition-duration: 0.01ms !important;\n                scroll-behavior: auto !important;\n            }\n        ',document.head.appendChild(e)}reduceAnimationComplexity(){console.log('🐌 Reducing animation complexity for better performance'),document.querySelectorAll('.interaction-glow, .interaction-magnetic').forEach(e=>{e.classList.add('performance-mode-low')})}increaseAnimationComplexity(){document.querySelectorAll('.performance-mode-low').forEach(e=>{e.classList.remove('performance-mode-low')})}addScrollAnimation(e,t='fade-in-up',i=0){e.dataset.animate=t,e.dataset.delay=i,e.classList.add('scroll-animate'),this.intersectionObserver&&this.intersectionObserver.observe(e)}triggerManualAnimation(e,t){this.reducedMotion||(e.classList.add(t),setTimeout(()=>{e.classList.remove(t)},1e3))}destroy(){this.intersectionObserver&&this.intersectionObserver.disconnect(),this.animatedElements.clear(),this.pendingAnimations.clear()}}class c{constructor(){this.skillBars=[],this.init()}init(){this.createSkillBars(),this.setupAnimations()}createSkillBars(){document.querySelectorAll('[data-proficiency]').forEach(e=>{const t=parseInt(e.dataset.proficiency)||0,i=e.textContent.trim();this.createAnimatedBar(e,t,i)})}createAnimatedBar(e,t,i){const n=document.createElement('div');n.className='skill-bar-container';const s=document.createElement('div');s.className='skill-bar-fill',s.style.width='0%',s.dataset.targetWidth=t+'%';const a=document.createElement('div');a.className='skill-bar-bg',a.appendChild(s),n.appendChild(a),e.classList.contains('tech-tag')&&(e.style.position='relative',e.appendChild(n)),this.skillBars.push({element:s,target:t,animated:!1})}setupAnimations(){const e=new IntersectionObserver(e=>{e.forEach(e=>{if(e.isIntersecting){const t=this.skillBars.find(t=>e.target.contains(t.element));t&&!t.animated&&(this.animateSkillBar(t),t.animated=!0)}})},{threshold:.5});this.skillBars.forEach(t=>{e.observe(t.element.closest('.tech-tag')||t.element)})}animateSkillBar(e){const{element:t,target:i}=e;let n=0;const s=i/60,a=()=>{if(n+=s,n>=i)return n=i,t.style.width=i+'%',void t.classList.add('skill-bar-complete');t.style.width=n+'%',requestAnimationFrame(a)};setTimeout(()=>{requestAnimationFrame(a)},500*Math.random())}}document.addEventListener('DOMContentLoaded',()=>{setTimeout(()=>{new a,console.log('♿ Accessibility controls initialized')},1e3),setTimeout(()=>{window.animationSystem=new o,window.skillBars=new c,console.log('🎭 Advanced animation systems initialized')},1200)});